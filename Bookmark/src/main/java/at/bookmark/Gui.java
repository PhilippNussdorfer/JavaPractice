package at.bookmark;

import net.miginfocom.swing.MigLayout;

import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

public class Gui {
    private JPanel mainPanel;
    private JTextField searchBar;
    private JButton btnAdd;
    private JPanel contentPanel;
    private JPanel searchPanel;
    private JScrollPane scrollContent;
    private JScrollPane scrollSearch;
    private final ContentHandler handler = new ContentHandler();
    private final JFrame frame = new JFrame("Bookmark");

    public void run() {
        Gui gui = new Gui();

        gui.frame.setContentPane(gui.mainPanel);
        gui.frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        gui.frame.setSize(540, 480);
        gui.frame.setVisible(true);

        gui.initButtons();
        gui.initContentPanelAndSearchPanel();
        gui.initDesign();
    }

    private void initDesign() {
        frame.setIconImage(handler.icon.getImage());
        mainPanel.setBackground(Color.GRAY);
    }

    private void addContent() {

        JTextField txtTitle = new JTextField();
        JLabel lblTitle = new JLabel("Book Title:");
        JTextField txtPage = new JTextField();
        JLabel lblPage = new JLabel("Book Page:");
        JTextField txtLink = new JTextField();
        JLabel lblLink = new JLabel("Book Link:");
        JButton btnAddContent = new JButton("Add Bookmark");

        Window window = new Window("Add Bookmark", lblTitle, txtTitle, lblPage, txtPage, lblLink, txtLink, btnAddContent);
        window.setGrid(4, 1, 10, 10);

        btnAddContent.addActionListener(e -> {
            if (!txtTitle.getText().isEmpty() && !txtLink.getText().isEmpty() && handler.isLink(txtLink.getText())) {
                handler.addNewBookmark(txtTitle.getText(), txtPage.getText(), txtLink.getText());
                handler.updateContentPanel(contentPanel);
            } else {
                handler.createErrorWindow("Could not add the Bookmark because there was no title or an invalid weblink");
            }
        });

        window.createWindow(320, 240);
    }

    private void initButtons() {
        btnAdd.addActionListener(e -> addContent());
    }

    private void initContentPanelAndSearchPanel() {
        MigLayout mig = new MigLayout("wrap 6");

        contentPanel.setLayout(mig);
        contentPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

        handler.addLoadedBookmarks();
        handler.updateContentPanel(contentPanel);

        searchPanel.setLayout(new MigLayout("wrap 3"));
        searchPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

        scrollContent.getVerticalScrollBar().setUnitIncrement(10);
        scrollSearch.getVerticalScrollBar().setUnitIncrement(10);
        searchBar.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent key) {
                searchPanel.removeAll();

                String searchWord = (searchBar.getText() + key.getKeyChar()).toLowerCase();

                for (Bookmark bookmark : handler.getBookmarks()) {
                    if (bookmark.getTitle().toLowerCase().contains(searchWord)) {
                        searchPanel.add(bookmark.getTitleLabel());
                        searchPanel.add(bookmark.getPageLabel());
                        searchPanel.add(bookmark.getLinkBtn());
                    }
                }

                searchPanel.revalidate();
                searchPanel.repaint();
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(4, 4, new Insets(10, 10, 10, 10), -1, -1));
        searchBar = new JTextField();
        mainPanel.add(searchBar, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        mainPanel.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        scrollSearch = new JScrollPane();
        mainPanel.add(scrollSearch, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 4, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        searchPanel = new JPanel();
        searchPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        scrollSearch.setViewportView(searchPanel);
        scrollContent = new JScrollPane();
        mainPanel.add(scrollContent, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 4, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        contentPanel = new JPanel();
        contentPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        scrollContent.setViewportView(contentPanel);
        final JLabel label1 = new JLabel();
        label1.setText("Search:");
        mainPanel.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(46, 16), null, 0, false));
        btnAdd = new JButton();
        btnAdd.setText("Add");
        mainPanel.add(btnAdd, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(46, 30), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
